apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-grupo-boticario-deployment
  labels:
    app: api-grupo-boticario
spec:
  replicas: 2  # Usando duas réplicas para maior resiliência
  selector:
    matchLabels:
      app: api-grupo-boticario
  strategy:
    type: RollingUpdate  # Atualizações sem downtime
    rollingUpdate:
      maxSurge: 1         # Permite até 1 pod adicional durante a atualização
      maxUnavailable: 1   # Permite até 1 pod indisponível durante a atualização
  template:
    metadata:
      labels:
        app: api-grupo-boticario
    spec:
      containers:
        - name: api-grupo-boticario
          image: gcr.io/api-grupo-boticario/api-grupo-boticario:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "test"  # Definido para ambiente de teste
          resources:
            requests:
              memory: "128Mi"  # Limita a memória para evitar uso excessivo
              cpu: "250m"      # Limita o uso de CPU
            limits:
              memory: "256Mi"
              cpu: "500m"
          startupProbe:  # Configuração da Startup Probe
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30  # Tempo de atraso inicial antes da primeira verificação (em segundos)
            periodSeconds: 10        # Intervalo entre as verificações (em segundos)
            timeoutSeconds: 5        # Tempo limite para cada verificação (em segundos)
            failureThreshold: 10     # Número de falhas consecutivas permitidas antes de considerar a inicialização como falha
          livenessProbe:  # Verifica se o contêiner está "vivo" e funcionando
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:  # Verifica se o contêiner está "pronto" para receber tráfego
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 2
          imagePullPolicy: Always  # Garante que sempre puxará a imagem mais recente do repositório
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-grupo-boticario-pdb
spec:
  minAvailable: 1  # Garante que pelo menos 1 réplica esteja sempre disponível
  selector:
    matchLabels:
      app: api-grupo-boticario
