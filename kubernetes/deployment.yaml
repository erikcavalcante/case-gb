apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-grupo-boticario
  labels:
    app: api-grupo-boticario
spec:
  replicas: 2  # Usando duas réplicas para resiliência
  selector:
    matchLabels:
      app: api-grupo-boticario
  strategy:
    type: RollingUpdate  # Para atualizações sem downtime
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: api-grupo-boticario
    spec:
      containers:
        - name: api-grupo-boticario
          image: gcr.io/$PROJECT_ID/api-grupo-boticario:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "test"
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          startupProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 2
          imagePullPolicy: Always
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-grupo-boticario-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: api-grupo-boticario
